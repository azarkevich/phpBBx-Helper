<?xml version="1.0"?>
<?xml-stylesheet href="chrome://global/skin/" type="text/css"?>

<overlay xmlns='http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul'
	id="zb-home-options-overlay">

	<prefpane id="zb-home" onpaneload ="olby_zbhome_init()">

		<preferences>
			<preference id="pref-zb_home-enable" name="extensions.onliner-by-helper.zb-home.enabled" type="bool"/>
		</preferences>
		
		<groupbox>
			<caption label="Отображение местоположения в квартале Зелёный Бор" />
			<checkbox label="Разрешить" preference="pref-zb_home-enable"/>
			<groupbox>
				<caption label="Картинки" />
				
				<grid>
					<columns>
						<column flex="0"/>
						<column flex="0"/>
					</columns>
				    <rows>
				      <row>
						<label value="Текущая версия" />
						<textbox id="zb-home-curr-version" flex="0" disabled="true" />
				      </row>
				      <row>
						<label value="Новая версия" />
						<textbox id="zb-home-new-version" value="...wait..." flex="0" disabled="true"/>
				      </row>
				      <row>
						<spacer flex="1"/>
						<button id="zb-home-update-btn" label="Обновить" onclick="zb_home_update_images()" flex="1" disabled="true"/>
				      </row>
				    </rows>
				  </grid>
			</groupbox>
		</groupbox>
	
	</prefpane>

	<script>
	<![CDATA[
		// find plugin:
		oz_olby.Plugins.forEach(
			function(p)
			{
				if(p.name == 'zb-home')
				{
					this.zb_home_plugin = p;
				}
			},
			this
		);
		
		function olby_zbhome_init()
		{
			try{
				// set current version
				document.getElementById('zb-home-curr-version').setAttribute('value', zb_home_plugin.version);

				// make request for new version
				var httpRequest = new XMLHttpRequest();
				httpRequest.open('GET', 'http://azarkevich.at.tut.by/MozAddIns/zb-home-images/version.xml?rand=' + Math.random(), false);
				httpRequest.send(null);
				if (httpRequest.status == 200)
				{
					var xml = httpRequest.responseXML;
					var newVer = Number(xml.documentElement.textContent);
					document.getElementById('zb-home-new-version').setAttribute('value', newVer);
					this.zb_home_plugin.new_version = newVer;
					if(this.zb_home_plugin.new_version >= this.zb_home_plugin.version)
					{
						document.getElementById('zb-home-update-btn').disabled = false;
					}
				}
				else
				{
					document.getElementById('zb-home-new-version').setAttribute('value', 'Error: ' + httpRequest.status);
				}
			}
			catch(e)
			{
				alert(e);
			}
		}
		
		function zb_home_update_images()
		{
			var dir = this.zb_home_plugin.images_dir.clone();
			
			var tdir = dir.clone();
			tdir.append("~tmp");
			if(tdir.exists())
				tdir.remove(true);

			var files = this.zb_home_plugin.images_dir.directoryEntries;
			var array = [];
			while(files.hasMoreElements())
			{
			  var entry = files.getNext();
			  entry.QueryInterface(Components.interfaces.nsIFile);
			  array.push(entry);
			}
			
			tdir.create(Components.interfaces.nsIFile.DIRECTORY_TYPE, 0666);

			try{
				array.forEach(
					function(f)
					{
						f.moveTo(tdir, f.leafName);
					}
				);
				
				// download new
				
			}
			catch(e)
			{
				alert('restore');
				// restore
				var files = tdir.directoryEntries;
				while(files.hasMoreElements())
				{
					var entry = files.getNext();
					entry.QueryInterface(Components.interfaces.nsIFile);
					entry.moveTo(dir, entry.leafName);
				}
			}
			if(tdir.exists())
				tdir.remove(true);
		}
		
	]]>
	</script>
</overlay>
